import React, { useEffect, useState } from "react";
import { db } from "../firebase";
import {
  collection,
  getDocs,
  updateDoc,
  doc,
  deleteDoc
} from "firebase/firestore";

// ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà
const departments = ["Sales", "Warehouse", "Production", "QC", "Account"];
const statusOptions = {
  Warehouse: ["‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏ö‡∏¥‡∏Å", "Pending", "‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à"],
  Production: ["‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ú‡∏•‡∏¥‡∏ï", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ú‡∏•‡∏¥‡∏ï", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏£‡∏£‡∏à‡∏∏", "‡∏ú‡∏•‡∏¥‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à"],
  QC: {
    qc_inspection: ["‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏£‡∏ß‡∏à", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à (‡∏£‡∏≠‡∏õ‡∏£‡∏±‡∏ö)", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à (Hold)", "‡∏ï‡∏£‡∏ß‡∏à‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß"],
    qc_coa: ["‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°", "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß"]
  },
  Account: ["Invoice ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å", "Invoice ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß"]
};

const getNextStep = (current) => {
  const index = departments.findIndex((d) => d === current);
  return index !== -1 && index < departments.length - 1
    ? departments[index + 1]
    : null;
};

export default function Home() {
  const [jobs, setJobs] = useState([]);

  useEffect(() => {
    fetchJobs();
  }, []);

  const fetchJobs = async () => {
    const querySnapshot = await getDocs(collection(db, "production_workflow"));
    const data = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
    setJobs(data);
    console.log("üî• jobs:", data);
  };

  const handleStatusChange = async (job, field, value) => {
    const jobRef = doc(db, "production_workflow", job.id);
    const newStatus = { ...job.status, [field]: value };

    let shouldAdvance = false;
    if (job.currentStep === "Warehouse" && value === "‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à") {
      shouldAdvance = true;
    }
    if (job.currentStep === "Production" && value === "‡∏ú‡∏•‡∏¥‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à") {
      shouldAdvance = true;
    }
    if (
      job.currentStep === "QC" &&
      newStatus.qc_inspection === "‡∏ï‡∏£‡∏ß‡∏à‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß" &&
      newStatus.qc_coa === "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß"
    ) {
      shouldAdvance = true;
    }
    if (job.currentStep === "Account" && value === "Invoice ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß") {
      shouldAdvance = true;
    }

    const updateData = { status: newStatus };
    if (shouldAdvance) {
      updateData.currentStep = getNextStep(job.currentStep);
    }

    await updateDoc(jobRef, updateData);
    fetchJobs();
  };

  const handleDelete = async (id) => {
    await deleteDoc(doc(db, "production_workflow", id));
    fetchJobs();
  };

  return (
    <div style={{ padding: 20 }}>
      <h2>üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏∏‡∏î</h2>
      
      {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß */}
      
    </div>
  );
}
